{
  "version": 3,
  "sources": ["dep:@vuepress_shared", "../../../../node_modules/@vuepress/shared/lib/esm/index.js", "../../../../node_modules/@vuepress/shared/lib/esm/types/index.js", "../../../../node_modules/@vuepress/shared/lib/esm/types/head.js", "../../../../node_modules/@vuepress/shared/lib/esm/types/locale.js", "../../../../node_modules/@vuepress/shared/lib/esm/types/page.js", "../../../../node_modules/@vuepress/shared/lib/esm/types/site.js", "../../../../node_modules/@vuepress/shared/lib/esm/types/ssr.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/index.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/dedupeHead.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/resolveHeadIdentifier.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/ensureLeadingSlash.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/ensureEndingSlash.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/formatDateString.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/htmlEscape.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/htmlUnescape.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkExternal.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkFtp.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkHttp.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkMailto.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkTel.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/isPlainObject.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/normalizePackageName.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/removeEndingSlash.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/removeLeadingSlash.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/resolveLocalePath.js", "../../../../node_modules/@vuepress/shared/lib/esm/utils/resolveRoutePathFromUrl.js"],
  "sourcesContent": ["\nexport * from \"../../../../node_modules/@vuepress/shared/lib/esm/index.js\"", "export * from './types';\nexport * from './utils';\n", "export * from './head';\nexport * from './locale';\nexport * from './page';\nexport * from './site';\nexport * from './ssr';\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "export { isArray, isFunction, isPromise, isString } from '@vue/shared';\nexport * from './dedupeHead';\nexport * from './ensureLeadingSlash';\nexport * from './ensureEndingSlash';\nexport * from './formatDateString';\nexport * from './htmlEscape';\nexport * from './htmlUnescape';\nexport * from './isLinkExternal';\nexport * from './isLinkFtp';\nexport * from './isLinkHttp';\nexport * from './isLinkMailto';\nexport * from './isLinkTel';\nexport * from './isPlainObject';\nexport * from './normalizePackageName';\nexport * from './removeEndingSlash';\nexport * from './removeLeadingSlash';\nexport * from './resolveHeadIdentifier';\nexport * from './resolveLocalePath';\nexport * from './resolveRoutePathFromUrl';\n", "import { resolveHeadIdentifier } from './resolveHeadIdentifier';\n/**\n * Dedupe head config with identifier\n *\n * Items that appear earlier have higher priority\n */\nexport const dedupeHead = (head) => {\n    const identifierSet = new Set();\n    const result = [];\n    head.forEach((item) => {\n        const identifier = resolveHeadIdentifier(item);\n        if (!identifierSet.has(identifier)) {\n            identifierSet.add(identifier);\n            result.push(item);\n        }\n    });\n    return result;\n};\n", "/**\n * Resolve identifier of a tag, to avoid duplicated tags in `<head>`\n */\nexport const resolveHeadIdentifier = ([tag, attrs, content,]) => {\n    // avoid duplicated `<meta>` with same `name`\n    if (tag === 'meta' && attrs.name) {\n        return `${tag}.${attrs.name}`;\n    }\n    // there should be only one `<title>` or `<base>`\n    if (['title', 'base'].includes(tag)) {\n        return tag;\n    }\n    // avoid duplicated `<template>` with same `id`\n    if (tag === 'template' && attrs.id) {\n        return `${tag}.${attrs.id}`;\n    }\n    return JSON.stringify([tag, attrs, content]);\n};\n", "/**\n * Ensure a url string to have leading slash /\n */\nexport const ensureLeadingSlash = (str) => str.replace(/^\\/?/, '/');\n", "/**\n * Ensure a url string to have ending slash /\n */\nexport const ensureEndingSlash = (str) => /(\\.html|\\/)$/.test(str) ? str : str + '/';\n", "/**\n * Format a date string to `yyyy-MM-dd`\n */\nexport const formatDateString = (str, defaultDateString = '') => {\n    // match the `yyyy-(M)M-(d)d` pattern\n    const dateMatch = str.match(/\\b(\\d{4})-(\\d{1,2})-(\\d{1,2})\\b/);\n    // return `defaultDateString` if no matched pattern\n    if (dateMatch === null) {\n        return defaultDateString;\n    }\n    // fill leading zeros for month and day\n    const [, yearStr, monthStr, dayStr] = dateMatch;\n    return [yearStr, monthStr.padStart(2, '0'), dayStr.padStart(2, '0')].join('-');\n};\n", "const htmlEscapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    \"'\": '&#39;',\n    '\"': '&quot;',\n};\nconst htmlEscapeRegexp = /[&<>'\"]/g;\n/**\n * Escape html chars\n */\nexport const htmlEscape = (str) => str.replace(htmlEscapeRegexp, (char) => htmlEscapeMap[char]);\n", "const htmlUnescapeMap = {\n    '&amp;': '&',\n    '&#38;': '&',\n    '&lt;': '<',\n    '&#60;': '<',\n    '&gt;': '>',\n    '&#62;': '>',\n    '&apos;': \"'\",\n    '&#39;': \"'\",\n    '&quot;': '\"',\n    '&#34;': '\"',\n};\nconst htmlUnescapeRegexp = /&(amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\n/**\n * Unescape html chars\n */\nexport const htmlUnescape = (str) => str.replace(htmlUnescapeRegexp, (char) => htmlUnescapeMap[char]);\n", "import { isLinkFtp } from './isLinkFtp';\nimport { isLinkHttp } from './isLinkHttp';\n/**\n * Determine a link is external or not\n */\nexport const isLinkExternal = (link, base = '/') => {\n    // http link or ftp link\n    if (isLinkHttp(link) || isLinkFtp(link)) {\n        return true;\n    }\n    // absolute link that does not start with `base`\n    if (link.startsWith('/') && !link.startsWith(base)) {\n        return true;\n    }\n    return false;\n};\n", "/**\n * Determine a link is ftp link or not\n */\nexport const isLinkFtp = (link) => link.startsWith('ftp://');\n", "/**\n * Determine a link is http link or not\n *\n * - http://github.com\n * - https://github.com\n * - //github.com\n */\nexport const isLinkHttp = (link) => /^(https?:)?\\/\\//.test(link);\n", "/**\n * Determine a link is a mailto: address or not\n */\nexport const isLinkMailto = (link) => /^mailto:/.test(link);\n", "/**\n * Determine a link is a tel: address or not\n */\nexport const isLinkTel = (link) => /^tel:/.test(link);\n", "/**\n * Check if a value is plain object, with generic type support\n */\nexport const isPlainObject = (val) => Object.prototype.toString.call(val) === '[object Object]';\n", "/**\n * Normalize package name\n */\nexport const normalizePackageName = (request, org, type = null) => {\n    // org prefix and type prefix\n    const orgPrefix = `${org}-`;\n    const typePrefix = type === null ? '' : `${type}-`;\n    // scoped package pattern\n    const scopedMatch = request.match(/^@(.*)\\/(.*)$/);\n    // handle non-scoped package\n    if (scopedMatch === null) {\n        // full name, return as is\n        if (request.startsWith(`${orgPrefix}${typePrefix}`)) {\n            return request;\n        }\n        // short name, add org prefix and type prefix\n        return `${orgPrefix}${typePrefix}${request}`;\n    }\n    // handle scoped package\n    const [, reqOrg, reqName] = scopedMatch;\n    // handle default org\n    if (reqOrg === org) {\n        // full name, return as is\n        if (reqName.startsWith(typePrefix)) {\n            return request;\n        }\n        // short name, add type prefix\n        return `@${reqOrg}/${typePrefix}${reqName}`;\n    }\n    // handle other org\n    // full name, return as is\n    if (reqName.startsWith(`${orgPrefix}${typePrefix}`)) {\n        return request;\n    }\n    // short name, add org prefix and type prefix\n    return `@${reqOrg}/${orgPrefix}${typePrefix}${reqName}`;\n};\n", "/**\n * Remove ending slash / from a string\n */\nexport const removeEndingSlash = (str) => str.replace(/\\/$/, '');\n", "/**\n * Remove leading slash / from a string\n */\nexport const removeLeadingSlash = (str) => str.replace(/^\\//, '');\n", "/**\n * Resolve the matched locale path of route path\n */\nexport const resolveLocalePath = (locales, routePath) => {\n    const localePaths = Object.keys(locales).sort((a, b) => {\n        const levelDelta = b.split('/').length - a.split('/').length;\n        if (levelDelta !== 0) {\n            return levelDelta;\n        }\n        return b.length - a.length;\n    });\n    for (const localePath of localePaths) {\n        if (routePath.startsWith(localePath)) {\n            return localePath;\n        }\n    }\n    return '/';\n};\n", "export const resolveRoutePathFromUrl = (url, base = '/') => url\n    // remove url origin\n    .replace(/^(https?:)?\\/\\/[^/]*/, '')\n    // remove site base\n    .replace(new RegExp(`^${base}`), '/');\n"],
  "mappings": "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",
  "names": []
}
